sudo -i
##we will give a meaning name to the master machine 
hostnamectl set-hostname k8node && bash
###we will disable the swap memory
swapoff -a
##we need to enable the ipv4 forwarding
# sysctl params required by setup, params persist across reboots
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.ipv4.ip_forward = 1
EOF

# Apply sysctl params without reboot
sudo sysctl --system

####we will install some software 
  apt-get install && apt-get update && apt-get install -y software-properties-common curl
##next we will define the kubernetes version 
KUBERNETES_VERSION=v1.30 && PROJECT_PATH=prerelease:/main
#download k8s pacakage and crio engine

curl -fsSL https://pkgs.k8s.io/core:/stable:/$KUBERNETES_VERSION/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/$KUBERNETES_VERSION/deb/ /" | tee /etc/apt/sources.list.d/kubernetes.list

curl -fsSL https://pkgs.k8s.io/addons:/cri-o:/$PROJECT_PATH/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/cri-o-apt-keyring.gpg
echo "deb [signed-by=/etc/apt/keyrings/cri-o-apt-keyring.gpg] https://pkgs.k8s.io/addons:/cri-o:/$PROJECT_PATH/deb/ /" | tee /etc/apt/sources.list.d/cri-o.list

apt-get update && apt-get install kubeadm kubelet cri-o -y

###check kubelet crio and kubeadm version 
kubeadm version
   
kubelet version
crio version
##################### restart the crio service and check that crictl command line works or not 
systemctl restart crio.service
crictl ps
crictl images
########################################we need to add k8s bash completion
kubeadm completion bash > kubeadm.sh && echo source /etc/bash_completion >> ~/.bashrc && echo source kubeadm.sh >> ~/.bashrc
source ~/.bashrc
